name: release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-jres:
    name: Build JRE ${{ matrix.label }}
    runs-on: ${{ matrix.runner }}
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        include:
          - label: linux-x86_64
            runner: ubuntu-latest
            download: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.4%2B7/OpenJDK21U-jdk_x64_linux_hotspot_21.0.4_7.tar.gz
            script: scripts/build-jre-linux.sh
            output: swaggen-jre-linux-x86_64.tar.gz
          - label: linux-arm64
            runner: ubuntu-22.04-arm
            download: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.4%2B7/OpenJDK21U-jdk_aarch64_linux_hotspot_21.0.4_7.tar.gz
            script: scripts/build-jre-linux.sh
            output: swaggen-jre-linux-arm64.tar.gz
          - label: macos-x86_64
            runner: macos-13
            download: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.4%2B7/OpenJDK21U-jdk_x64_mac_hotspot_21.0.4_7.tar.gz
            script: scripts/build-jre-macos.sh
            output: swaggen-jre-macos-x86_64.tar.gz
          - label: macos-arm64
            runner: macos-14
            download: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.4%2B7/OpenJDK21U-jdk_aarch64_mac_hotspot_21.0.4_7.tar.gz
            script: scripts/build-jre-macos.sh
            output: swaggen-jre-macos-arm64.tar.gz
          - label: windows-x86_64
            runner: windows-latest
            download: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.4%2B7/OpenJDK21U-jdk_x64_windows_hotspot_21.0.4_7.zip
            script: scripts/build-jre-windows.ps1
            output: swaggen-jre-windows-x86_64.zip
    steps:
      - uses: actions/checkout@v4
      - name: Download Temurin JDK
        run: |
          curl -L --fail "${{ matrix.download }}" -o jdk-archive
        shell: bash
      - name: Build trimmed JRE
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            pwsh -File ${{ matrix.script }} -JdkZip jdk-archive -OutputZip ${{ matrix.output }}
          else
            bash ${{ matrix.script }} jdk-archive ${{ matrix.output }}
          fi
        shell: bash
      - name: Compute checksum
        run: |
          if [[ '${{ runner.os }}' == 'Windows' ]]; then
            pwsh -Command "Get-FileHash -Algorithm SHA256 -Path '${{ matrix.output }}' | Out-String" | tee checksum.txt
          else
            if command -v shasum >/dev/null 2>&1; then
              shasum -a 256 '${{ matrix.output }}' | tee checksum.txt
            else
              sha256sum '${{ matrix.output }}' | tee checksum.txt
            fi
          fi
        shell: bash
      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ matrix.output }}
            checksum.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build-jres
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
      - name: Build artifacts
        run: |
          python -m build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.9.0
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  binaries:
    name: Build one-file binaries
    runs-on: ${{ matrix.os }}
    needs: publish
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyinstaller
      - name: Build executable
        run: |
          pyinstaller -n swaggen --onefile swaggen/cli.py \
            --add-data "swaggen/vendor/openapi-generator-cli-7.6.0.jar:swaggen/vendor"
        shell: bash
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*/swaggen*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
