name: release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-jres:
    name: Build bundled JREs
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ubuntu-latest
            shell: bash
            output: swain_cli-jre-linux-x86_64.tar.gz
            script: scripts/build-jre-linux.sh
            jdk_url: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.4+7/OpenJDK21U-jdk_x64_linux_hotspot_21.0.4_7.tar.gz
            jdk_ext: tar.gz
          - runner: ubuntu-latest
            shell: run-on-arch
            output: swain_cli-jre-linux-arm64.tar.gz
            jdk_url: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.4+7/OpenJDK21U-jdk_aarch64_linux_hotspot_21.0.4_7.tar.gz
          - runner: macos-13
            shell: bash
            output: swain_cli-jre-macos-x86_64.tar.gz
            script: scripts/build-jre-macos.sh
            jdk_url: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.4+7/OpenJDK21U-jdk_x64_mac_hotspot_21.0.4_7.tar.gz
            jdk_ext: tar.gz
          - runner: macos-14
            shell: bash
            output: swain_cli-jre-macos-arm64.tar.gz
            script: scripts/build-jre-macos.sh
            jdk_url: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.4+7/OpenJDK21U-jdk_aarch64_mac_hotspot_21.0.4_7.tar.gz
            jdk_ext: tar.gz
          - runner: windows-latest
            shell: pwsh
            output: swain_cli-jre-windows-x86_64.zip
            jdk_url: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.4+7/OpenJDK21U-jdk_x64_windows_hotspot_21.0.4_7.zip
    steps:
      - uses: actions/checkout@v4

      - name: Prepare output directory
        if: ${{ matrix.shell != 'pwsh' }}
        run: mkdir -p dist/jre
        shell: bash

      - name: Prepare output directory (Windows)
        if: ${{ matrix.shell == 'pwsh' }}
        run: New-Item -ItemType Directory -Force -Path dist\jre | Out-Null
        shell: pwsh

      - name: Build trimmed JRE (native)
        if: ${{ matrix.shell == 'bash' }}
        run: |
          set -euo pipefail
          curl -L "${{ matrix.jdk_url }}" -o "temurin.${{ matrix.jdk_ext }}"
          bash "${{ matrix.script }}" "temurin.${{ matrix.jdk_ext }}" "dist/jre/${{ matrix.output }}"
        shell: bash

      - name: Build trimmed JRE (aarch64)
        if: ${{ matrix.shell == 'run-on-arch' }}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y curl tar binutils
          run: |
            set -euo pipefail
            mkdir -p dist/jre
            curl -L '${{ matrix.jdk_url }}' -o temurin.tar.gz
            bash scripts/build-jre-linux.sh temurin.tar.gz dist/jre/${{ matrix.output }}

      - name: Build trimmed JRE (Windows)
        if: ${{ matrix.shell == 'pwsh' }}
        run: |
          Invoke-WebRequest -Uri '${{ matrix.jdk_url }}' -OutFile temurin.zip
          $output = Join-Path 'dist\jre' '${{ matrix.output }}'
          ./scripts/build-jre-windows.ps1 -JdkZip temurin.zip -OutputZip $output
        shell: pwsh

      - name: List outputs
        run: ls -R dist
        shell: bash
        if: ${{ matrix.shell != 'pwsh' }}

      - name: List outputs (Windows)
        run: Get-ChildItem -Recurse dist
        shell: pwsh
        if: ${{ matrix.shell == 'pwsh' }}

      - name: Upload JRE assets to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/jre/${{ matrix.output }}
            dist/jre/${{ matrix.output }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish to PyPI
    needs: build-jres
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
      - name: Build artifacts
        run: |
          python -m build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.9.0
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  binaries:
    name: Build one-file binaries
    runs-on: ${{ matrix.os }}
    needs: publish
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyinstaller
      - name: Build executable
        run: |
          pyinstaller -n swain_cli --onefile swain_cli/cli.py
        shell: bash
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*/swain_cli*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
